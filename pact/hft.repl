(begin-tx)
(env-data
 { 'ns-admin-keyset: ["admin"]
 , 'ns-operate-keyset: ["operate"]
 , 'ns-genesis-keyset: { "keys": [], "pred": "="}
 , 'util-ns-admin: []
 , 'hft-admin: []
 , 'ns: "free"
 , 'upgrade: false })
(load "root/fungible-v2.pact")
(load "root/ns.pact")
(load "fungible-util.pact")
(commit-tx)

(begin-tx)
(load "hft.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'bob-ks: ["bob"],
   'alice-ks: ["alice"],
   'ownership-g: ["project-0:1"]
 })
(env-keys ["bob"])
(use free.hft)

(env-sigs [
  { 'key: "bob"
  , 'caps:
    [
     (MINT "project-0" "bob" 5.0),
     (TRANSFER "project-0" "bob" "alice" 2.0),
     (TRANSFER "project-0" "bob" "project-0:1" 1.0),
     (TRANSFER "project-0:1" "bob" "alice"  0.000000002),
     (MINT "project-0:1" "bob" 1.0)
    ]
  },
  {
    'key: "project-0:1",
    'caps: [
     (MINT "project-0:1" "bob" 1.0)
    ]
  },
  {
    'key: "alice",
    'caps: [
      (TRANSFER "project-0:1" "alice" "project-0:1:1" 1.0)
      (MINT "project-0:1:1" "alice" 0.0000000001)
    ]
  }
  ])

(create-token "project-0" (read-keyset 'bob-ks) "project-0-uri" 12)

(expect
  "bob mints a new token"
  "Write succeeded"
  (mint "project-0" "bob" (read-keyset 'bob-ks) 5.0))

(expect-failure
  "alice can't mint a project-0 token"
  (mint "project-0" "alice" (read-keyset 'alice-ks) 5.0))
;;regular transfer
(transfer-create "project-0" "bob" "alice" (read-keyset 'alice-ks) 2.0)

;;tokenifying transfer
(expect
  "bob minted a new token"
  "Write succeeded"
  (transfer-mint "project-0" "project-0:1" "bob" "project-0:1" (read-keyset 'ownership-g) 1.0 13))

(expect
  "bob's details on new token"
  {"account": "bob","balance": 1.0,"guard":(read-keyset 'bob-ks),"token": "project-0:1"}
  (details "project-0:1" "bob"))

(expect
  "new token locker in original token"
  {"account": "project-0:1","balance": 1.0,"guard":(read-keyset 'ownership-g),"token": "project-0"}
  (details "project-0" "project-0:1"))

(expect
  "alice receives a new token"
  "Write succeeded"
  (transfer-create "project-0:1" "bob" "alice" (read-keyset 'alice-ks) 0.000000002))

(expect
  "alice receives a newly minted token"
  {"account": "alice","balance": 0.000000002,"guard":(read-keyset 'alice-ks),"token": "project-0:1"}
  (details "project-0:1" "alice"))

(expect
  "alice mints a new token"
  "Write succeeded"
  (transfer-mint "project-0:1" "project-0:1:1" "alice" "project-0:1:1" (read-keyset 'alice-ks) 0.0000000001 15))

(expect "uri of project-0" "project-0-uri" (uri "project-0"))
(expect "uri of project-0:1" "project-0-uri" (uri "project-0:1"))

(expect "All tokens in the ledger"
  ["project-0", "project-0:1", "project-0:1:1"]
  (get-tokens)
  )

(commit-tx)
