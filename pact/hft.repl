(begin-tx)
(env-data
 { 'ns-admin-keyset: ["admin"]
 , 'ns-operate-keyset: ["operate"]
 , 'ns-genesis-keyset: { "keys": [], "pred": "="}
 , 'util-ns-admin: []
 , 'hft-admin: []
 , 'ns: "user"
 , 'upgrade: false })
(load "root/fungible-v2.pact")
(load "root/ns.pact")
(load "fungible-util.pact")
(commit-tx)

(begin-tx)
(load "hft.pact")
(load "votes.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'bob-ks: ["bob"],
   'alice-ks: ["alice"]
 })
(env-keys ["bob"])
(use user.hft)

(env-sigs [
  { 'key: "bob"
  , 'caps:
    [
     (MINT "project-0" "bob" 5.0),
     (TRANSFER "project-0" "bob" "alice" 2.0),
     (TRANSFER "project-0" "bob" "project-0:1" 1.0),
     (TRANSFER "project-0:1" "bob" "alice"  0.000000002),
     (MINT "project-0:1" "bob" 1.0)
    ]
  },
  {
    'key: "project-0:1",
    'caps: [
     (MINT "project-0:1" "bob" 1.0)
    ]
  },
  {
    'key: "alice",
    'caps: [
      (TRANSFER "project-0:1" "alice" "project-0:1:1" 1.0)
      (MINT "project-0" "alice" 5.0)
      (user.hft.ROTATE "project-0" "alice")
      (MINT "project-0:1" "alice" 10.0)
      (user.hft.TRANSFER "project-0" "alice" "alice-1" 1.0)
    ]
  }
  ])


(expect
  "bob creates a new token project-0"
  "Write succeeded"
  (create-token "project-0" (read-keyset 'bob-ks) 12 "project-0-uri"))

(expect
  "bob mints a 5.0 of token"
  "Write succeeded"
  (mint "project-0" "bob" (read-keyset 'bob-ks) 5.0))

(expect
  "total supply of project-0"
  5.0
  (total-supply "project-0"))

(expect-failure
  "alice can't mint a project-0 token"
  (mint "project-0" "alice" (read-keyset 'alice-ks) 5.0))

;;regular transfer
(expect "Bob transfers 2.0 to Alice"
  "Write succeeded"
  (transfer-create "project-0" "bob" "alice" (read-keyset 'alice-ks) 2.0))


;;Rotate and issue a new tokens

(expect
  "guard of project-0:alice is rotated to a token-guard"
  "Write succeeded"
  (rotate "project-0" "alice" (user.govtest.create-token-guard)))

(expect
  "Create token project-0:1"
  "Write succeeded"
  (create-token "project-0:1" (read-keyset 'alice-ks) 16 "project-0-uri"))

(expect
  "Alice mints new project-0:1"
  "Write succeeded"
  (mint "project-0:1" "alice" (read-keyset 'alice-ks) 10.0)
  )

(expect-failure
  "Alice fails in transferring project-0 token"
  "require-capability: not granted: (user.govtest.COUNT_VOTES)"
  (transfer-create "project-0" "alice" "alice-1" (read-keyset 'alice-ks) 1.0)
)

(use user.govtest)
;;with COUNT_VOTES capability, alice succeeds in transferring project-0 token

(test-capability (user.govtest.COUNT_VOTES))
(transfer-create "project-0" "alice" "alice-1" (read-keyset 'alice-ks) 1.0)

(expect "All tokens in the ledger"
  ["project-0", "project-0:1"]
  (get-tokens)
  )

(commit-tx)
