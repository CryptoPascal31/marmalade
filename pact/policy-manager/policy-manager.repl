(begin-tx)
(env-data
  { 'ns-admin-keyset: []
  , 'ns-genesis-keyset:[]
  , 'ns-operate-keyset:[] })
(load "../root/fungible-v2.pact")
(load "../root/gas-payer-v1.pact")
(load "../root/coin.pact")
(env-exec-config ["DisablePact44"])
(load "../root/ns.pact")
(define-namespace 'kip (sig-keyset) (sig-keyset))

(load "../kip/account-protocols-v1.pact")
(load "../kip/concrete-policy-v1.pact")
(load "../kip/token-policy-v2.pact")
(load "../kip/poly-fungible-v3.pact")


(define-namespace 'util (sig-keyset) (sig-keyset))
(load "../util/fungible-util.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: false })
 (env-sigs [
   { 'key: 'marmalade-admin
    ,'caps: []
    }])
(load "../ns-marmalade.pact")
(load "../policy-manager/policy-manager.pact")
(load "../ledger.pact")
(commit-tx)

(begin-tx "load concrete-polices")
(load "../concrete-policies/fungible-quote-policy/fungible-quote-policy-v1.pact")
(load "../concrete-policies/non-fungible-policy/non-fungible-policy-v1.pact")
(load "../concrete-policies/royalty-policy/royalty-policy-v1.pact")

(use kip.concrete-policy-v1 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY])
(marmalade.policy-manager.init (marmalade.ledger.ledger-guard))
(marmalade.policy-manager.add-concrete-policy QUOTE_POLICY marmalade.fungible-quote-policy-v1)
(marmalade.policy-manager.add-concrete-policy NON_FUNGIBLE_POLICY marmalade.non-fungible-policy-v1)
(marmalade.policy-manager.add-concrete-policy ROYALTY_POLICY marmalade.royalty-policy-v1)

(commit-tx)

(begin-tx)

(use kip.concrete-policy-v1 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY])
(module util GOV
  (defcap GOV () true)

  (defconst DEFAULT_CONCRETE_POLICY:object{kip.concrete-policy-v1.concrete-policy}
    { 'quote-policy: true
     ,'non-fungible-policy: true
     ,'royalty-policy: false
    }
  )
  (defconst DEFAULT_POLICIES:object{kip.token-policy-v2.token-policies}
    { 'concrete-policies:DEFAULT_CONCRETE_POLICY
     ,'immutable-policies: []
     ,'adjustable-policies:[]
    })
)
(commit-tx)

(begin-tx)
(use marmalade.ledger)
(use marmalade.policy-manager)

(env-data {
  "token-id": (create-token-id { 'uri: "test-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES } )
 ,"account": "account"
 ,"mint-guard": {"keys": ["account"], "pred": "keys-all"}
  })
(env-sigs [
  { 'key: 'account
   ,'caps: [(marmalade.ledger.MINT "t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" 1.0)]
   }])

(expect "create a default token with quote-policy, non-fungible-policy"
  true
  (create-token (read-msg 'token-id) 0 "test-uri" util.DEFAULT_POLICIES ))

(expect "mint a default token with quote-policy, non-fungible-policy"
  true
  (mint (read-msg 'token-id )  (read-msg 'account ) (read-keyset 'mint-guard ) 1.0))

(commit-tx)

(begin-tx "start an offer")
(env-hash (hash "offer-0"))
(use marmalade.ledger)

(test-capability (coin.COINBASE))
(env-data {
  "seller-guard": {"keys": ["seller"], "pred": "keys-all"}
})
(coin.coinbase "seller-account" (read-keyset 'seller-guard) 2.0)

(env-data {
  "token-id": (create-token-id { 'uri: "test-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES } )
 ,"quote": {
   "fungible": coin
  ,"price": 2.0
  ,"recipient": 'seller-account
  ,"recipient-guard": {"keys": ["seller"], "pred": "keys-all"}}
  })
;; should we change time to use the "time" type instead of block height?
(env-chain-data {"block-height": 100})
(env-sigs [
  { 'key: 'account
   ,'caps: [
   (marmalade.ledger.OFFER "t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" 1.0 115 )]
   }])

(expect "stat offer by running step 0 of sale"
  true
  (sale (read-msg 'token-id) 'account 1.0 115))
(env-data { "recipient-guard": {"keys": ["seller"], "pred": "keys-all"}})

(expect "events"
 [ {"name": "coin.TRANSFER","params": ["" "seller-account" 2.0]}
   {"name": "marmalade.ledger.OFFER","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" 1.0 115]}
   {"name": "marmalade.ledger.SALE","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" 1.0 115 "C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg"]}
   {"name": "marmalade.fungible-quote-policy-v1.QUOTE","params": ["C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg" "t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" 1.0 2.0 2.0 {"fungible": coin,"price": 2.0,"recipient": "seller-account","recipient-guard": (read-keyset 'recipient-guard )}]}
   {"name": "marmalade.ledger.ACCOUNT_GUARD","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "p:C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg:SALE" (create-pact-guard "SALE")]}
   {"name": "marmalade.ledger.TRANSFER","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" "p:C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg:SALE" 1.0]} {"name": "marmalade.ledger.RECONCILE","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" 1.0 {"account": "account","current": 0.0,"previous": 1.0} {"account": "p:C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg:SALE","current": 1.0,"previous": 0.0}]}]
   (map (remove 'module-hash)  (env-events true)))

(env-data {
  "buyer": "buyer-account"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 ,"market-guard": {"keys": ["market"], "pred": "keys-all"}
 ,"marketplace-fee": {
   "marketplace-account":"marketplace"
  ,"fee": 0.05
  }})
(test-capability (coin.COINBASE))
(coin.coinbase "buyer-account" (read-keyset 'buyer-guard) 2.0)
(coin.create-account "marketplace" (read-keyset 'market-guard))
(env-sigs
 [{'key:'buyer
  ,'caps: [
    (BUY (create-token-id { 'uri: "test-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES } ) "account" "buyer-account" 1.0 115 "C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg")
    (coin.TRANSFER "buyer-account" "marketplace" 0.05)
    (coin.TRANSFER "buyer-account" "seller-account" 19.95)
  ]}])
(env-hash (hash "offer-0"))

(expect "Buy succeeds"
  true
  (continue-pact 1))
(env-data {
  "buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}})

(expect "events"
 [ {"name": "coin.TRANSFER","params": ["" "buyer-account" 2.0]}
   {"name": "marmalade.ledger.BUY","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "account" "buyer-account" 1.0 115 "C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg"]}
   {"name": "coin.TRANSFER","params": ["buyer-account" "marketplace" 0.05]}
   {"name": "coin.TRANSFER","params": ["buyer-account" "seller-account" 1.95]}
   {"name": "marmalade.ledger.ACCOUNT_GUARD","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "buyer-account" (read-keyset 'buyer-guard )]}
   {"name": "marmalade.ledger.TRANSFER","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" "p:C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg:SALE" "buyer-account" 1.0]}
   {"name": "marmalade.ledger.RECONCILE","params": ["t:StLj52U3S2MF1j5As9v_PAowe5ls1_tzoEqlV4yawwQ" 1.0 {"account": "p:C1vw1eMf_DZV3oZjyinRIKrQV2rPMBMh3lydeduo8yg:SALE","current": 0.0,"previous": 1.0} {"account": "buyer-account","current": 1.0,"previous": 0.0}]}]
   (map (remove 'module-hash)  (env-events true)))

(commit-tx)
